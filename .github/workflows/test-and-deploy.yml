name: Test & Deploy
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "15"
          check-latest: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Generate a hash of dependency files for cache key
      - name: Generate dependency hash
        id: dep-hash
        run: |
          echo "hash=$(find requirements.txt pyproject.toml package.json Dockerfile -type f -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.dep-hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: jazzband-website:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Save the Docker image for other jobs
      - name: Save Docker image
        run: docker save jazzband-website:latest > /tmp/jazzband-website.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/jazzband-website.tar
          retention-days: 14

  test:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "15"
          check-latest: true

      - run: make envvar

      # Download the Docker image from the build job
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      # Load the Docker image
      - name: Load Docker image
        run: docker load < /tmp/jazzband-website.tar

      - name: Run tests
        run: make ci
        env:
          COVERAGE_FILE: /tmp/.coverage
          COVERAGE_XML: /tmp/coverage.xml

      # Copy coverage XML from Docker container to host
      - name: Copy coverage XML from container
        run: docker cp $(docker ps -aqf "name=jazzband-website-web"):/tmp/coverage.xml ./coverage.xml

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml

  deploy:
    if: github.event.action == 'published' && github.repository == 'jazzband/website'

    runs-on: ubuntu-latest

    needs: [build, test]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Push
        uses: dokku/github-action@v1.7.0
        # enable verbose ssh output
        with:
          branch: "main"
          git_push_flags: "--force"
          git_remote_url: ${{ secrets.SSH_REMOTE_URL }}
          ssh_private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ github.ref }}
